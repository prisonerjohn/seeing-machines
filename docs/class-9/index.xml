<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Class 9 on</title><link>https://seeingmachines.betamovement.net/docs/class-9/</link><description>Recent content in Class 9 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 13 Nov 2022 09:54:33 -0500</lastBuildDate><atom:link href="https://seeingmachines.betamovement.net/docs/class-9/index.xml" rel="self" type="application/rss+xml"/><item><title>Draw Bounds</title><link>https://seeingmachines.betamovement.net/docs/class-9/draw-bounds/</link><pubDate>Fri, 04 Nov 2022 15:46:22 -0400</pubDate><guid>https://seeingmachines.betamovement.net/docs/class-9/draw-bounds/</guid><description>Most of the example apps we have built so far have had the same window size as the video grabber or depth camera size.
ofSetWindowShape(640, 480); grabber.setup(640, 480); This is convenient because window coordinates match pixel coordinates, and we can easily do things like sampling using the mouse position without too much trouble.
However, it is also limiting as we can&amp;rsquo;t define the window dimensions we want. We will usually want the video to take up the entire screen, especially for exhibit purposes, so we need to get comfortable with image scaling.</description></item><item><title>Frame Buffers</title><link>https://seeingmachines.betamovement.net/docs/class-9/frame-buffers/</link><pubDate>Sun, 13 Nov 2022 09:51:58 -0500</pubDate><guid>https://seeingmachines.betamovement.net/docs/class-9/frame-buffers/</guid><description>When we draw something in OF, whether it&amp;rsquo;s a circle or an image or a 3D shape, it gets drawn to the screen by default. But we don&amp;rsquo;t need to necessarily draw to the screen; we can also draw to an offscreen location called a framebuffer.
A framebuffer object (or FBO) is a simple OpenGL object that lives in graphics memory that we can draw into. We can think of it as a &amp;ldquo;virtual window&amp;rdquo;; anything we can draw on screen we can draw inside this window.</description></item></channel></rss>