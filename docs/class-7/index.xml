<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Class 7 on</title><link>https://seeingmachines.betamovement.net/docs/class-7/</link><description>Recent content in Class 7 on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 27 Oct 2022 19:16:21 -0400</lastBuildDate><atom:link href="https://seeingmachines.betamovement.net/docs/class-7/index.xml" rel="self" type="application/rss+xml"/><item><title>3D Primer</title><link>https://seeingmachines.betamovement.net/docs/class-7/3d-primer/</link><pubDate>Thu, 27 Oct 2022 19:16:21 -0400</pubDate><guid>https://seeingmachines.betamovement.net/docs/class-7/3d-primer/</guid><description>Everything we have done so far has been in two dimensions, using (x, y) for position, and [width, height] for size. Now that we&amp;rsquo;ve got data that also has depth, we can move into the third dimension to represent it. This means using (x, y, z) for position, and [width, height, depth] for size.
3D in OF # By default, the openFrameworks canvas is set to 2D. The origin (0, 0) is in the top-left, and values increase as we move right and down.</description></item><item><title>Depth World</title><link>https://seeingmachines.betamovement.net/docs/class-7/depth-world/</link><pubDate>Thu, 27 Oct 2022 19:16:21 -0400</pubDate><guid>https://seeingmachines.betamovement.net/docs/class-7/depth-world/</guid><description>Point Clouds # If we change our mesh topology to OF_PRIMITIVE_POINTS, this will draw points at each vertex position without interpolating in the space between them.
If we want to add more resolution, we need more points.
Update the mesh to render points, and add a vertex for every pixel. // ofApp.h #pragma once #include &amp;quot;ofMain.h&amp;quot; #include &amp;quot;ofxGui.h&amp;quot; class ofApp : public ofBaseApp { public: void setup(); void update(); void draw(); ofVideoGrabber grabber; ofMesh pointMesh; ofxPanel guiPanel; }; // ofApp.</description></item></channel></rss>